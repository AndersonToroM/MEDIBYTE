@*  Remplazar FATHERModel por el modelo del padre al que pertenece   *@

@model JobModel
@{
    string Prefix = "JobLog";
    string UrlOnClick = Url.Action("EditDetail", "JobLog");
    string UrlNew = Url.Action("NewDetail", "JobLog", new { IdFather = Model.Entity.Id });

    var DataGridDetailConfig = new DataGridConfiguration<JobLog>(Prefix)
        //.OnClick(UrlOnClick, new { Id = "Id" }, Prefix + "MainPanelForm")
        //.New(UrlNew,Model.Entity.IsNew,Prefix + "MainPanelForm")
        .Exports(true, true);
}



@* ------------ Descomentar el siguiente codigo si es una edicion en maestro --------------- *@

<div class="card cardDeatil">
    <div class="card-body">
        <div class="box-body table-responsive no-padding">
            @(Html.DControls().DataGridSimple<JobLog>(DataGridDetailConfig)
                .ID("JobLogDetalleDataGrid")
                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("JobLog").LoadAction("Get").Key("Id"))
                .DataSourceOptions(x => x.Filter("['JobId','=','" + @Model.Entity.Id + "']")) // Cambiar IdFather por el campo foraneo hacia el padre
                .Columns(columns =>
                {
                    columns.AddFor(m => m.DateExecution).Format($"{DApp.DefaultLanguage.DateTimeFormat}:ss").SortOrder(SortOrder.Desc);
                    columns.AddFor(m => m.IsSuccess);
                    columns.AddFor(m => m.Error);
                })
                )
        </div>
        <div id="JobLogMainPanelForm"></div>
    </div>
</div>



@* ------------ Descomentar el siguiente codigo si es una edicion en grilla y COMENTAR LOS METODOS OnClick y New del DataGridDetailConfig --------------- *@
@*
<script>
     function @(Prefix)OnInitNewRowDetalleDataGrid(model) {
         model = GetAuditoryData(model);
         model.data.IdFather = "@Model.Entity.Id"; // Cambiar IdFather por el campo foraneo hacia el padre
     }
</script>
<div class="card cardDeatil">
    <div class="card-body">
        <div class="box-body table-responsive no-padding">
             @(Html.DControls().DataGridSimple<JobLog>(DataGridDetailConfig)
                 .ID("JobLogDetalleDataGrid")
                 .DataSource(d => d.Mvc().LoadMethod("POST").Controller("JobLog").LoadAction("Get").Key("Id")
                     .InsertAction("AddInGrid").InsertMethod("POST").UpdateAction("ModifyInGrid").UpdateMethod("POST").DeleteAction("DeleteInGrid").DeleteMethod("POST")
                 )
                 .DataSourceOptions(x=>x.Filter("['IdFather','=','"+@Model.Entity.Id+"']")) // Cambiar IdFather por el campo foraneo hacia el padre
                 .Editing(editing => editing.Mode(GridEditMode.Batch).AllowAdding(!Model.Entity.IsNew).AllowUpdating(true).AllowDeleting(true))
                 .OnInitNewRow(Prefix + "OnInitNewRowDetalleDataGrid")
                 .OnRowInserted("OnRowInsertedDetalleDataGrid").OnRowUpdated("OnRowUpdatedDetalleDataGrid").OnRowRemoved("OnRowRemovedDetalleDataGrid").OnDataErrorOccurred("OnDataErrorOccurredDetalleDataGrid")
                 .Columns(columns =>
                 {
                     columns.AddFor(m => m.DateExecution).Format(DApp.DefaultLanguage.DateFormat)
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("JobLogs.DateExecution")));
                     columns.AddFor(m => m.IsSuccess)
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("JobLogs.IsSuccess")));
                     columns.AddFor(m => m.Error)
                     ;
                     columns.AddFor(m => m.JobId)
                         .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("JobLogs.JobId")))
                         .ValidationRules(rules => rules.AddRange().Min(1).Message(DApp.GetRequiredResource("JobLogs.JobId")))
                             .Lookup(lookup => lookup
                             .DataSource(d => d.Mvc().LoadMethod("POST").Controller("JobLog").LoadAction("GetJobId").Key("Id"))
                             .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                             .ValueExpr("Id").DisplayExpr("Id"));
             })
         )
        </div>
    </div>
</div>
*@
