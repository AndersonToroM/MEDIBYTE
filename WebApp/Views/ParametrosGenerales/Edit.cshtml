@model ParametrosGeneralesModel
@{
    string Prefix = "ParametrosGenerales";

    string UrlSave = Url.Action("Edit", "ParametrosGenerales");
    string UrlNew = Url.Action("New", "ParametrosGenerales");
    string UrlDelete = Url.Action("Delete", "ParametrosGenerales", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "ParametrosGenerales");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("ParametrosGenerales"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave), Model.Entity.IsNew);

}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="ParametrosGeneralesMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="ParametrosGenerales" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class","ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.Time).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.Time).Visible(false))
                @(Html.DControls().CheckBoxFor(m => m.ModifyPasswordIntegracionFE).ID(Prefix + "ModifyPasswordIntegracionFE").Visible(false))

                @(Html.DControls().Form<ParametrosGeneralesModel>()
                    .ID("ParametrosGeneralesModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("ParametrosGenerales.IntegracionFE"))
                            .Items(groupItems =>{
 
                                groupItems.AddSimpleFor(m => m.Entity.UsuarioIntegracionFE).ColSpan(4)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("ParametrosGenerales.FechaDesdeAtenciones")))
                                      .Editor(e=>e.TextBox().ID(Prefix + "UsuarioIntegracionFE")
                                      .ShowClearButton(true)
                                      );
                                groupItems.AddSimpleFor(x=>x.Entity.PasswordIntegracionFE).ColSpan(4)
                                    .Editor(e => e.TextBox().ShowClearButton(true).Mode(TextBoxMode.Password).ID($"{Prefix}PasswordIntegracionFE").Value(Model.Entity.PasswordIntegracionFE)
                                        .OnValueChanged($"{Prefix}OnValueChangedPasswordIntegracionFE")
                                        .Buttons(buttons =>
                                        {
                                            buttons.Add()
                                                .Name($"{Prefix}BotonCambiarModoPasswordIntegracionFE")
                                                .Location(TextEditorButtonLocation.After)
                                                .Widget(w => w.Button()
                                                    .Type(ButtonType.Normal)
                                                    .Icon(Url.Content("~/images/eye_open_icon.png"))
                                                    .OnClick($"{Prefix}OnClickBotonCambiarModoPasswordIntegracionFE")
                                                );
                                        })
                                    );

                                groupItems.AddSimple().Label(l => l.Text(DApp.DefaultLanguage.GetResource("ParametrosGenerales.ConfirmarPasswordIntegracionFE"))).ColSpan(4)
                                    .Editor(e => e.TextBox().ShowClearButton(true).Mode(TextBoxMode.Password).ID($"{Prefix}ConfirmPasswordIntegracionFE").Value(Model.Entity.PasswordIntegracionFE)
                                        .Buttons(buttons =>
                                        {
                                            buttons.Add()
                                                .Name($"{Prefix}BotonCambiarModoConfirmarPasswordIntegracionFE")
                                                .Location(TextEditorButtonLocation.After)
                                                .Widget(w => w.Button()
                                                    .Type(ButtonType.Normal)
                                                    .Icon(Url.Content("~/images/eye_open_icon.png"))
                                                    .OnClick($"{Prefix}OnClickBotonCambiarModoConfirmarPasswordIntegracionFE")
                                                );
                                        })
                                    )
                                    .ValidationRules(rules => rules.AddCustom().ValidationCallback($"{Prefix}ConfirmingPasswordIntegracionFE"));

                            groupItems.AddSimpleFor(x => x.Entity.CompanyIdFE).ColSpan(4)
                                .ValidationRules(rules => rules.AddStringLength().Min(36).Max(36).Message(DApp.GetStringLengthResource("ParametrosGenerales.CompanyIdFE", 36))) 
                                .Editor(e => e.TextBox().ShowClearButton(true).ID($"{Prefix}CompanyIdFE"));

                            groupItems.AddSimpleFor(x => x.Entity.OperadorFE).ColSpan(4)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(30).Message(DApp.GetStringLengthResource("ParametrosGenerales.OperadorFE", 30)))
                                .Editor(e => e.TextBox().ShowClearButton(true).ID($"{Prefix}OperadorFE"));

                            groupItems.AddSimpleFor(x => x.Entity.EmailRecepcionFE).ColSpan(4)
                                .ValidationRules(rules => rules.AddStringLength().Min(0).Max(250).Message(DApp.GetStringLengthResource("ParametrosGenerales.EmailRecepcionFE", 250)))
                                .Editor(e => e.TextBox().ShowClearButton(true).ID($"{Prefix}EmailRecepcionFE"));

                            });

                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("ParametrosGenerales.Atenciones"))
                            .Items(groupItems =>{
                                groupItems.AddSimpleFor(m => m.Entity.HabilitarAnteciones).Label(x=>x.Visible(false)).ColSpan(2)
                                      .Editor(e=>e.CheckBox().ID(Prefix + "HabilitarAnteciones")
                                      .Text(DApp.DefaultLanguage.GetResource("ParametrosGenerales.HabilitarAnteciones"))
                                      .OnValueChanged($"{Prefix}OnValueChangedHabilitarAnteciones")
                                      );
                                groupItems.AddSimpleFor(m => m.Entity.FechaDesdeAtenciones).ColSpan(4)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("ParametrosGenerales.FechaDesdeAtenciones")))
                                      .Editor(e=>e.DateBox().ID(Prefix + "FechaDesdeAtenciones").Type(DateBoxType.Date)
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat))
                                      .ShowClearButton(true).UseMaskBehavior(true)
                                      );
                                groupItems.AddSimpleFor(m => m.Entity.FechaHastaAtenciones).ColSpan(4)
                                  .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("ParametrosGenerales.FechaHastaAtenciones")))
                                      .Editor(e=>e.DateBox().ID(Prefix + "FechaHastaAtenciones").Type(DateBoxType.Date)
                                      .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat))
                                      .ShowClearButton(true).UseMaskBehavior(true)
                                      );
                            });

                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("ParametrosGenerales.AnularAtenciones"))
                            .Items(groupItems =>
                            {
                                groupItems.AddSimple().ColSpan(12).Label(x => x.Text(""))
                                    .Editor(x => x.TextBox().Height(25).ReadOnly(true).Value(DApp.GetResource("ParametrosGenerales.TextoAyudaCambiarEstadosAnteciones"))
                                );
                                    
                                groupItems.AddSimple().ColSpan(2).Label(x=>x.Text(DApp.GetResource("ParametrosGenerales.ConsecutivoCita")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "ConsecutivoCita")
                                      .ShowClearButton(true)
                                      );
                                groupItems.AddSimple().ColSpan(2).Label(x => x.Text(DApp.GetResource("ParametrosGenerales.ConsecutivoAdmision")))
                                      .Editor(e => e.NumberBox().ID(Prefix + "ConsecutivoAdmision")
                                      .ShowClearButton(true)
                                      );
                                groupItems.AddSimple().ColSpan(8).Label(x => x.Text(DApp.GetResource("ParametrosGenerales.DetalleAnulacion")))
                                      .Editor(e => e.TextArea().Height(35).ID(Prefix + "DetalleAnulacion")
                                      );
                                groupItems.AddButton().ColSpan(12).VerticalAlignment(VerticalAlignment.Center).HorizontalAlignment(HorizontalAlignment.Center)
                                    .ButtonOptions(x => x.Text(DApp.GetResource("ParametrosGenerales.CambiarEstados")).Type(ButtonType.Default)
                                    .UseSubmitBehavior(false).OnClick($"{Prefix}OnClickCambiarEstadoAtencion")
                                );

                            });

                        items.AddGroup().ColCount(12).ColSpan(6).Caption(DApp.DefaultLanguage.GetResource("ParametrosGenerales.Lecturas"))
                            .Items(groupItems =>{
                                groupItems.AddSimpleFor(m => m.Entity.EsObligatorioAudioLectura).Label(x=>x.Visible(false)).ColSpan(12)
                                      .Editor(e=>e.CheckBox().ID(Prefix + "EsObligatorioAudioLectura")
                                      .Text(DApp.DefaultLanguage.GetResource("ParametrosGenerales.EsObligatorioAudioLectura"))
                                      );
                            });
                        items.AddGroup().ColCount(12).ColSpan(6).Caption(DApp.DefaultLanguage.GetResource("ParametrosGenerales.CatalogosDIAN"))
                        .Items(groupItems =>{
                            groupItems.AddSimpleFor(m => m.Entity.HabCatalogoDIAN).ColSpan(4)
                            .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("ParametrosGenerales.HabCatalogoDIAN")))
                            .Editor(e => e.TextBox().ID(Prefix + "HabCatalogoDIAN")
                            .ReadOnly(true)
                            );
                            groupItems.AddSimpleFor(m => m.Entity.ProdCatalogoDIAN).ColSpan(4)
                            .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("ParametrosGenerales.ProdCatalogoDIAN")))
                            .Editor(e => e.TextBox().ID(Prefix + "ProdCatalogoDIAN")
                            .ReadOnly(true)    
                            );
                        });
                    })
                )
            }
        </form>
    </div>
</div>
