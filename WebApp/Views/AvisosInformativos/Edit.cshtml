@model AvisosInformativosModel
@{
    string Prefix = "AvisosInformativos";

    string UrlSave = Url.Action("Edit", "AvisosInformativos");
    string UrlNew = Url.Action("New", "AvisosInformativos");
    string UrlDelete = Url.Action("Delete", "AvisosInformativos", new { Id = Model.Entity.Id });
    string UrlBack = Url.Action("ListPartial", "AvisosInformativos");

    var ToolbarConfig = new ToolbarConfiguration(Prefix)
        .Title(DApp.DefaultLanguage.GetResource("AvisosInformativos"))
        .Save(DApp.ActionViewSecurity(Context, UrlSave), Model.Entity.IsNew, $"{Prefix}SetContenidoEditor")
        .New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        .Delete(UrlDelete, DApp.ActionViewSecurity(Context, UrlDelete), UrlBack, Model.Entity.IsNew)
        .AddButtons(new List<ButtonToolbar>()
                        {
            new ButtonToolbar
            {
                Action = $"{Prefix}MostrarAviso",
                Text = @DApp.DefaultLanguage.GetResource("AvisosInformativos.MostrarAviso"),
                Disabled = Model.Entity.IsNew,
                Location = ToolbarItemLocation.After,
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Icon = "warning"
            }
                        })
        .Back(UrlBack);
}

<partial name="ViewJS.cshtml" model="Model" view-data="ViewData" />

@(Html.DControls().Toolbar(ToolbarConfig))

<div>
    <div id="AvisosInformativosMainPanelForm">
        <form id="@(Prefix)Form" asp-controller="AvisosInformativos" asp-action="Edit" class="form-horizontal" data-ajax-mode="replace" data-ajax-update="#mainPanel" data-ajax-success="@(Prefix)FormSuccess" data-ajax-failure="@(Prefix)FormFailure" data-ajax="true">
            @(Html.DControls().ValidationSummary().ValidationGroup(Prefix + "ValidationGroup").ElementAttr("class", "ErrorValidationSummary"))
            @using (Html.DevExtreme().ValidationGroup(Prefix + "ValidationGroup"))
            {
                @(Html.DControls().CheckBoxFor(m => m.Entity.IsNew).ID(Prefix + "IsNew").Visible(false))
                @(Html.DControls().NumberBoxFor(m => m.Entity.Id).ID(Prefix + "Id").Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.UpdatedBy).ID(Prefix + "UpdatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.LastUpdate).ID(Prefix + "LastUpdate").Type(DateBoxType.DateTime).Visible(false))
                @(Html.DControls().TextBoxFor(m => m.Entity.CreatedBy).ID(Prefix + "CreatedBy").Visible(false))
                @(Html.DControls().DateBoxFor(m => m.Entity.CreationDate).ID(Prefix + "CreationDate").Type(DateBoxType.DateTime).Visible(false))

                @(Html.DControls().TextBoxFor(m => m.Entity.Contenido).ID(Prefix + "Contenido").Visible(true))

                @(Html.DControls().Form<AvisosInformativosModel>()
                    .ID("AvisosInformativosModelForm").LabelLocation(FormLabelLocation.Top).ShowValidationSummary(false).FormData(Model)
                    .Items(items =>
                    {
                        items.AddGroup().ColCount(12).Caption(DApp.DefaultLanguage.GetResource("DEFAULT.INFORMATIONGENERAL"))
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.Entity.Titulo).ColSpan(6)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("AvisosInformativos.Titulo")))
                        .ValidationRules(rules => rules.AddStringLength().Min(0).Max(500).Message(DApp.GetStringLengthResource("AvisosInformativos.Titulo", 500)))
                        .Editor(e => e.TextBox().ID(Prefix + "Titulo").ShowClearButton(true));
                            groupItems.AddSimpleFor(m => m.Entity.MostrarHasta).ColSpan(3)
                        .ValidationRules(rules => rules.AddRequired().Message(DApp.GetRequiredResource("AvisosInformativos.MostrarHasta")))
                        .Editor(e => e.DateBox().ID(Prefix + "MostrarHasta").Min(DateTime.Now.AddDays(1)).Type(DateBoxType.Date)
                        .DisplayFormat(DApp.DefaultLanguage.DateFormat).Placeholder(DateTime.Now.ToString(DApp.DefaultLanguage.DateFormat)).ShowClearButton(true).UseMaskBehavior(true));
                            groupItems.AddSimpleFor(m => m.Entity.Activo).Label(x => x.Visible(false)).ColSpan(3)
                        .Editor(e => e.CheckBox().ID(Prefix + "Activo").Text(DApp.DefaultLanguage.GetResource("AvisosInformativos.Activo")));
                            
                            groupItems.AddSimple().ColSpan(12).Template(new TemplateName($"{Prefix}HTMLEditor"));
                        });
                    })
                    )
            }
        </form>
    </div>
</div>

@using (Html.DControls().NamedTemplate($"{Prefix}HTMLEditor"))
{
    <partial name="_HtmlEditor" model="Model" view-data="ViewData" />
}

@(Html.DControls().Popup()
    .ID("PopupAnularAdmision")
    .FullScreen(true).CloseOnOutsideClick(false)
    .Title(Model.Entity.Titulo).ShowTitle(true).ShowCloseButton(false)
    .Visible(false).DragEnabled(false)
    .ContentTemplate(new JS($"{Prefix}CargarContenido"))
)