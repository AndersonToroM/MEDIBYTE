@{
    string Prefix = "AtencionesResultado";
    string UrlClick = Url.Action("Edit", "AtencionesResultado");
    string UrlNew = Url.Action("New", "AtencionesResultado");

    var DataGridConfig = new DataGridConfiguration<AtencionesResultado>(Prefix)
        .GoInstructionManual("https://cloudonesoft.freshdesk.com/support/solutions/articles/70000635447-corregir-profesional-en-lectura-de-resultados")
        .OnClick(UrlClick, new { Id = "Id" })
        //.New(UrlNew,DApp.ActionViewSecurity(Context,UrlNew))
        .Exports(true, true).SetStorage()
        .AddButtons(new List<ButtonToolbar>
        {
            new ButtonToolbar
            {
                Action = $"{Prefix}MostrarPopupCambiarProfesional",
                Icon = "todo",
                Text = DApp.DefaultLanguage.GetResource("AtencionesResultado.CambiarProfesional"),
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Location = ToolbarItemLocation.After
            }
        })
        .ToolbarTop(DApp.DefaultLanguage.GetResource("AtencionesResultado"), "mainPanel");
}

<script>
    function @(Prefix)MostrarPopupCambiarProfesional() {

        var resultadosSelected = $("#AtencionesResultadoDataGrid").dxDataGrid("instance").getSelectedRowsData();

        if (resultadosSelected.length <= 0) {
            DevExpress.ui.notify("Debe seleccionar al menos un resultado.", "error");
            return false;
        }
        $("#@(Prefix)PopupCambiarProfesional").dxPopup("instance").show();

    }

    function @(Prefix)CambiarProfesional() {

        var empleadoSelectedId = $("#@(Prefix)AccionCambiarProfesional").dxSelectBox("instance").option("value");
        if (empleadoSelectedId == 0 || empleadoSelectedId == "" || empleadoSelectedId == null) {
            DevExpress.ui.notify("Error: El profesional es obligatorio.", "error", 4000);
            return false;
        }

        var resultadosSelected = $("#AtencionesResultadoDataGrid").dxDataGrid("instance").getSelectedRowKeys();
        showLoadIndicator();
        $.ajax({
            url: "@Url.Action("CambiarProfesional",Prefix)",
            data: { empleadoId: empleadoSelectedId, resultadosSelected: resultadosSelected },
            type: 'POST',
            success: function (data) {
                hideLoadIndicator();
                DevExpress.ui.notify("El profesional se ha modificado correctamente.", "info");
                $("#AtencionesResultadoDataGrid").dxDataGrid("instance").refresh();
                $("#@(Prefix)PopupCambiarProfesional").dxPopup("instance").hide();
            },
            error: function (xhr) {
                console.log(xhr);
                hideLoadIndicator();
                DevExpress.ui.notify("Error: " + xhr.responseText, "error", 4000);
                $("#@(Prefix)PopupCambiarProfesional").dxPopup("instance").hide();
            }
        });
    }
</script>

<div class="box-body table-responsive no-padding">
    @(Html.DControls().DataGridSimple<AtencionesResultado>(DataGridConfig)
        .ID("AtencionesResultadoDataGrid")
        .DataSource(d => d.Mvc().LoadMethod("POST").Controller("AtencionesResultado").LoadAction("Get").Key("Id"))
        .Columns(columns =>
        {
            columns.AddFor(m => m.Id).Caption(DApp.DefaultLanguage.GetResource("AtencionesResultado.Id"));
            columns.AddFor(m => m.AdmisionesServiciosPrestados.Admisiones.Pacientes.NumeroIdentificacion);
            columns.AddFor(m => m.AdmisionesServiciosPrestados.Admisiones.Pacientes.NombreCompleto).Caption(DApp.DefaultLanguage.GetResource("AtencionesResultado.Paciente"));
            columns.AddFor(m => m.AdmisionesServiciosPrestados.Servicios.Nombre);
            columns.AddFor(m => m.Estados.Nombre);
            columns.AddFor(m => m.AdmisionesServiciosPrestados.Atenciones.FechaAtencion).SortOrder(SortOrder.Desc);
            columns.AddFor(m => m.Empleado.NombreCompleto).Caption(DApp.DefaultLanguage.GetResource("AtencionesResultado.Profesional"));
            columns.AddFor(m => m.Entregado);
        })
        )
</div>

@(Html.DControls().Popup()
    .ID($"{Prefix}PopupCambiarProfesional")
    .Width(800)
    .Height(200)
    .ShowTitle(true)
    .Title(DApp.DefaultLanguage.GetResource("AtencionesResultado.CambiarProfesional"))
    .Visible(false)
    .DragEnabled(false)
    .CloseOnOutsideClick(false)
    .ContentTemplate(new TemplateName($"{Prefix}TemplateCambiarProfesional"))
)

@using (Html.DevExtreme().NamedTemplate($"{Prefix}TemplateCambiarProfesional"))
{
    <div id="@(Prefix)Errores" class="text-danger text-sm-left"></div>
    <div class="row">
        <div class="form-group col-md-12">
            <label for="@($"{Prefix}AccionCambiarProfesional")">@DApp.DefaultLanguage.GetResource("AtencionesResultado.EmpleadosId"):</label>
            @(Html.DControls().SelectBox()
                .ID($"{Prefix}AccionCambiarProfesional").InputAttr("class", "form-control")
                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("AtencionesResultado").LoadAction("GetEmpleadosId").Key("Id"))
                .DataSourceOptions(o => o.Paginate(true).PageSize(50))
                .ValueExpr("Id").DisplayExpr("NombreCompleto").SearchExpr("NumeroIdentificacion", "PrimerNombre", "SegundoNombre", "PrimerApellido", "SegundoApellido")
                .SearchEnabled(true).ShowClearButton(true)
            )
        </div>
    </div>

    <div class="row d-flex justify-content-center">
        <button class="btn btn-dark btn" id="@(Prefix)ButtonAccept" onclick="@(Prefix)CambiarProfesional()">ACEPTAR</button>
    </div>
}