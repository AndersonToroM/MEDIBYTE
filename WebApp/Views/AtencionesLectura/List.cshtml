@{
    string Prefix = "AtencionesLectura";
    string UrlClick = Url.Action("NewAtencionLecturaAudio", "AtencionesResultado");

    var DataGridConfig = new DataGridConfiguration<AdmisionesServiciosPrestados>(Prefix)
        .OnClick(UrlClick, new { Id = "Id" })
        //.New(UrlNew, DApp.ActionViewSecurity(Context, UrlNew))
        .Exports(true, true).SetStorage()
        .GoInstructionManual("https://cloudonesoft.freshdesk.com/support/solutions/articles/70000620006-lectura-de-resultados-sin-grabaci%C3%B3n-de-audio")
        .ToolbarTop(DApp.DefaultLanguage.GetResource("AtencionesLectura"), "mainPanel");

    bool EsObligatorioAudioLectura = ViewBag.EsObligatorioAudioLectura;
    if (!EsObligatorioAudioLectura)
    {
        DataGridConfig.AddButtons(new List<ButtonToolbar>
        {
            new ButtonToolbar
            {
                Action = $"{Prefix}MostrarPopupMarcarLeidos",
                Icon = "todo",
                Text = DApp.DefaultLanguage.GetResource("AtencionesLectura.MarcarLeidos"),
                LocateInMenu = ToolbarItemLocateInMenuMode.Auto,
                Location = ToolbarItemLocation.After
            }
        });
    }
}

<script>

    function @(Prefix)MostrarPopupMarcarLeidos() {

        var resultadosSelected = $("#AtencionesLecturaDataGrid").dxDataGrid("instance").getSelectedRowsData();

        if (resultadosSelected.length <= 0) {
            DevExpress.ui.notify("Debe seleccionar al menos una lectura.", "error");
            return false;
        }
        $("#@(Prefix)PopupMarcarLeidos").dxPopup("instance").show();
    }

    function @(Prefix)MarcarLeidos() {

        $("#@(Prefix)Errores").html("");

        var empleadoSelectedId = $("#@(Prefix)AccionMarcarLeidos").dxSelectBox("instance").option("value");
        if (empleadoSelectedId == 0 || empleadoSelectedId == "" || empleadoSelectedId == null) {
            DevExpress.ui.notify("Error: El profesional es obligatorio.", "error", 4000);
            return false;
        }

        var resultadosSelected = $("#AtencionesLecturaDataGrid").dxDataGrid("instance").getSelectedRowKeys();
        showLoadIndicator();
            $.ajax({
                url: "@Url.Action("MarcarLeidos",Prefix)",
                data: { empleadoId : empleadoSelectedId, admisionesServiciosPrestadosId : resultadosSelected },
                type: 'POST',
                success: function (data) {
                    hideLoadIndicator();
                    DevExpress.ui.notify("Servicios marcados como leidos correctamente.", "info");
                    $("#AtencionesLecturaDataGrid").dxDataGrid("instance").refresh();
                    $("#@(Prefix)PopupMarcarLeidos").dxPopup("instance").hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    hideLoadIndicator();
                    DevExpress.ui.notify("Error: " + xhr.responseText, "error", 4000);
                    $("#@(Prefix)PopupMarcarLeidos").dxPopup("instance").hide();
                }
            });
    }

</script>

<div class="box-body table-responsive no-padding">
    @(Html.DControls().DataGridSimple<AdmisionesServiciosPrestados>(DataGridConfig)
    .ID("AtencionesLecturaDataGrid")
    .DataSource(d => d.Mvc().LoadMethod("POST").Controller("AtencionesLectura").LoadAction("GetAtencionesLectura").Key("Id"))
    .Columns(columns =>
    {
    columns.AddFor(m => m.Admisiones.Pacientes.NumeroIdentificacion);
    columns.AddFor(m => m.Admisiones.Pacientes.NombreCompleto).Caption(DApp.DefaultLanguage.GetResource("AtencionesLectura.Paciente"));
    columns.AddFor(m => m.Servicios.Nombre).Caption(DApp.DefaultLanguage.GetResource("AtencionesLectura.Servicio"));
    columns.AddFor(m => m.Atenciones.FechaAtencion).Caption(DApp.DefaultLanguage.GetResource("AtencionesLectura.Fecha"));
    columns.AddFor(m => m.Admisiones.Id).Caption(DApp.DefaultLanguage.GetResource("AtencionesLectura.AdmisionesId")).SortOrder(SortOrder.Desc);

    })
    )
</div>

<div class="row">
    <div class="col-md-12">
        @(Html.DControls().Popup()
        .ID($"{Prefix}PopupMarcarLeidos")
        .Width(800)
        .Height(200)
        .ShowTitle(true)
        .Title(DApp.DefaultLanguage.GetResource("AtencionesLectura.MarcarLeidos"))
        .Visible(false)
        .DragEnabled(false)
        .CloseOnOutsideClick(false)
        .ContentTemplate(new TemplateName($"{Prefix}TemplateMarcarLeidos"))
        )

        @using (Html.DevExtreme().NamedTemplate($"{Prefix}TemplateMarcarLeidos"))
        {
            <div id="@(Prefix)Errores" class="text-danger text-sm-left"></div>
            <div class="row">
                <div class="form-group col-md-12">
                    <label for="@($"{Prefix}AccionMarcarLeidos")">@DApp.DefaultLanguage.GetResource("AtencionesLectura.MarcarLeidosEmpleadosId"):</label>
                    @(Html.DControls().SelectBox()
                .ID($"{Prefix}AccionMarcarLeidos").InputAttr("class", "form-control")
                .DataSource(d => d.Mvc().LoadMethod("POST").Controller("AtencionesLectura").LoadAction("GetEmpleadosId").Key("Id"))
                .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                .ValueExpr("Id").DisplayExpr("NombreCompleto").SearchExpr("NumeroIdentificacion", "PrimerNombre", "SegundoNombre", "PrimerApellido", "SegundoApellido")
                .SearchEnabled(true).ShowClearButton(true)
                )
                </div>
            </div>

            <div class="row d-flex justify-content-center">
                <button class="btn btn-dark btn" id="@(Prefix)ButtonAccept" onclick="@(Prefix)MarcarLeidos()">ACEPTAR</button>
            </div>
        }
    </div>
</div>